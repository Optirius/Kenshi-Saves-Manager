<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAobK4AKKzuR6lt7xatMrMAKCwtwCru8MEjpyiKnB5fm1BQkStOTk42To6
        OvI8PDz9PT09/Ts7O/I6OjrZNTU1rTQzM2w4NzoqIyAgBAAAAACgsLdZnKu0GpmnsQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIuqwwGIqMMNnLvNEbjW3Be72+AWr8jNO7LIy3a5zc0jprnAUoqaoKBrdXjgWV9h+1Va
        XP9LTlD/R0lL/0tNT/9LTU//RkdI/0pMTf9XXF7/T1NV+1leYt9OU1aaiZedYKW4vnCqwskyuNjeGrXU
        3BqUtMoPg6bDBYqrxACApsMAianDCIepw22Kq8WYjrHJqIinv7aLorPQp7vC6ZGktORwf6D5ZXWV/3uO
        nP+ClKD/coic/3eKmv9whJn/bX+V/3B/kP91hpj/dYWW/4eXp/9vgJn/d4eZ/2t9kP+Fmaf1hZqp5oys
        wsWOssq5j7LKsIiqxY2GqcRZkKnJAY+qxgCMq8MHiKnFcYaoxLWEp8TMgqC52qW7w/mOoq//ZHuY/15w
        lv9xg53/nbK9/3+Tpv9pf5j/dYeb/26Gn/9wiaL/c4ie/2uGov93i6H/dYqk/2uAnv+Gmaj/gZWm/4id
        rf98kaT/epev9oCjv9uFqMXLiKrFroapxHeKqskBjarGAJOtxASHqMRbhqjEm4msx7WBn7fZfpKj+pms
        tP9xg5v/a3+b/3eLn/+SprH/d4yi/3OLov+UqbX/ip+t/3eNo/94i53/c4me/4OXp/90iJ//eYme/4GV
        qP91jaT/hJus/4Saq/96lKn/epas94SlvtaKrMeRhqnFaH2kwwGKrMYAla7BAIqqww2Tt9UVYGxyVU9V
        VuteZmj/cXl9/3d8hf+Gj5j/UU1Z/1pZY/99go7/ZWVx/1VaYP9ARkj/Z3J4/3B8g/98ipD/ZXB2/0NH
        TP9la3T/Y2Vw/1NQWf9eXmj/b3Z+/1tjZ/9XX2P/WGBk7mBsdFOOt9cSep6zAJCt2AAAAAAAQD8/AD8+
        Pho+Pj7APz8//0dHS/9FO0n/Piw7/2pncf+FjJP/WlBd/0EzQP9CNUP/Jxwl/xALD/8RDhL/IiAp/yom
        M/8SDhX/CwgN/yIdJf83Kzb/PC02/zcrNv9eXWj/NDE0/zg2N/9AQD//RUREwERCQhlDQkIAAAAAAElJ
        SQBOTk4CR0dHiUdHR/9HRkn/PTlV/zgxUv8/MEX/Qi8//1xSX/+JkJf/ZWVu/zgqN/8hFx//GRMZ/yEY
        If8cFR7/FBAZ/xQQGv8YEx7/HBcl/y0nPv86MUL/NCw6/1VNYf9KRFD/PTpI/0RESP9ERET/Q0NDiUVF
        RQJDQ0MASkpKAEtLSzhKSkrpTExM/0E5Qf8yKUD/Ny1G/zouRf89Nlr/PzNQ/0s/V/91eYf/a2x3/z80
        Qf8yJTD/LCIq/yshK/8gGCP/FxMh/xoYKv8jJEH/KCxS/z9Ca/9QUmr/dHmG/0xLWf87OVP/QUFP/0JC
        Qv9AQEDpQkJCOEFBQQBeXl4DU1NTl1JTU/9JR0j/LiUs/y4lMf8zLUL/NDRY/zZBg/8wOXb/PTxx/zs2
        W/9IQ1D/VFBc/0A0Qf8zJjD/KSAn/y4jLv8kIDT/MTBL/zI1XP80P3v/Sk51/1lVY/9MSFP/NjRA/zw5
        SP8zMTn/Pz5A/0BAQP8/Pz+XPj4+A1paWipYWFjeVVVV/z08R/8sLUT/Li9J/y0xUf8tM1f/LTFV/zAu
        UP8sKkn/JydC/yUkOf8xMEH/OzdD/zMtN/8yLz3/RT1O/zI3VP9GTHL/Sk96/0hPgP9TT2b/U05d/0ZC
        T/8sKzL/MTA5/zIxOP8xMTT/QEBA/z8/P948PDwqWlpabFxcW/tWWGD/OUJt/zA2W/8pLEX/IyQ5/yEm
        Rf84PnP/REN1/0NGev9ER3f/QEJk/0dIY/9OTmX/SEdZ/yUlLv80NEP/LDdX/0hSev9SUGT/U1Bj/1RQ
        Yf9ST17/SkdV/zk3Q/9DQU3/OzlD/zExOP9BQUP/PDw8+zY2NmxhYWGsX19f/1hYY/9NTm//UE5o/1JO
        Zv9RS2L/T0pl/09Laf9MSmb/T01n/1FOZP9RTWD/Uk5g/1NQYf9NSlr/KCUp/yoqNP8qLT7/R1iG/1BP
        YP9RUGH/UVBg/1FQYf9RT2D/UU5f/1FOXv9OS1r/S0hW/0NCR/85OTn/NTU1rGdnZ9lmZmb/Xltp/1lT
        bf9YU2z/VlFo/1VQZv9VUGb/U1Bk/1BRZP9QUGL/Tk5e/05OXf9OT17/TEta/0hGU/8rKCz/JSIl/ygq
        N/8/U4D/TU5d/09OWv9PTlr/T05Z/05NWP9NTFf/T0xY/1BPXP9RUFz/RkZM/zg4OP83NzfZbm5u8m1t
        bf9YWWf/TFBl/01SZv9OVGn/UFdv/1Jadv9RWXT/T1dw/01Vaf9OWnL/UV58/1Figf9QYoH/Slp1/yUj
        J/8bFhT/GxgY/zFCaf9PYoT/UV93/1FhfP9SY33/UmJ6/1RjfP9XZX3/WGV+/1pmfP9PVmP/OTk5/zo6
        OvJsbGz9a2tr/1heYv9QWF3/UVlg/09aX/9PW2L/U2B0/1NgeP9TYHz/VnOW/1mCp/9ahqz/WYex/1KJ
        vf9Sh7n/Kz1R/xUQDv8XFBX/Kz1k/0h5rv9Kisv/RonQ/0mKzP9Lisn/TorF/1eItP9Wh7T/UInB/0Rw
        nf85Ojv/Ozs7/W5ubv1rbGz/W2Nm/1RgaP9UYW3/U2Bp/1Nfa/9TZof/UXCV/06Asv9PjsX/Uo/B/1iK
        tP9Oj8f/QpTd/0GIxv8hNEn/FRQU/xwbIf8nNlv/MmWd/0GV4v9BlOD/QZTf/0CU3/9ClN3/TJDK/0aT
        1f9CluD/PXis/zc4Ov85OTj9bW1t8nBwcP9jbHv/Wmd1/1pnfP9XcpT/VIOq/02Qx/9JnNj/RaDe/0af
        3f9Hn9v/TpfL/0id2f9GoN//QI/F/yhJYf8YHiP/Ghog/yc8ZP85dbD/RqHf/0af3f9Gn93/Rp/d/0af
        3f9Hnt3/RZ/e/0ai4f8+d5//MTEy/zEwMPJycnLZcnJx/2Ryi/9Uf5z/WGt3/1KHsv9Kq9z/Savc/0mq
        2/9Jqtv/Sarb/0mq2/9Kqtr/Sqvb/0qs3P9El8L/HDE9/xMYG/8WGyv/Hy1R/z+Ct/9KrNz/Sarb/0mr
        2/9Jqtv/Savb/0uq2/9Oq9n/UK3a/0Fwh/8vLi7/Li4u2W1tbaxubGv/Yn2L/0+qyf9TeXX/U36W/02x
        1/9NtNj/TbTY/0202P9NtNj/TbTY/0202P9NtNj/Tbba/zh8lP8TFxz/EhQX/xonRf8fLFH/O3yg/023
        2v9Ntdj/TbXY/0y11/9Mtdf/TbTX/0611/9Ps9T/Pl5p/zEvL/8vLy+sZmZmbGVkZPtgbnH/UrHF/1Od
        pP9Ucn3/UqnI/1G+1f9RvdX/Ub3U/1G91P9RvdT/UL3U/1C91P9Sv9b/PoST/xkeIf8WGB7/JTNa/xwm
        P/9Ajab/UsDX/1G91f9QvdT/Ub3U/1G+1P9RvdT/Ub7W/0yqvv82REf/MjEx+y8vL2xhYWEqY2Nj3mJi
        Y/9Zn6j/V8nU/1eZoP9Xo7z/WcjR/1nH0P9Zx9D/WMfQ/1jI0v9YyNH/WMfP/1jI0f9VvcX/MlNW/x0a
        Hv8lL03/IzRJ/02lsv9ZydH/WMfQ/1jI0P9ax9D/WsfP/1jH0P9ZytL/SIiN/zExMf8vLy/eMDAwKlpa
        WgNgYGCXX11d/1t2ef9a09v/Yt3i/2PR0v9hzcv/Yc3L/1/Q0P9b193/Wtrj/17a4f9k09T/Yc7K/2HO
        y/9Lj4//Jjo6/xceKv84aH3/XcHC/2LOy/9hzcv/Yc3K/2LNyv9izcv/Yc7M/12/vf85UE//Li0t/zAw
        MJcqKioDWlpaAFxcXDdaWlrpW1tb/16eoP9q5Ob/dOfn/3Pb1/9m0Mn/Y9vc/2Lg5f9k4eb/ZuLo/3nm
        6v9t083/ZMzE/1Gem/9bsqz/SIqJ/2PFwf9n0Mf/Zs/G/2bPxv9mz8b/Zs/G/2bPx/9mz8f/TYJ+/zMz
        M/8vLy/pLy8vNy8vLwBUVFQAT09PAlpaWolbW1v/WWJi/2m5uf9+6+n/kO3v/3/g3f9r4OD/bOLi/23i
        4/9u4+T/hOvu/33b1v9pzMH/ZcG4/2rOxP9r0cX/as/E/2rOw/9qzsP/as7D/2rOw/9qzsP/a9DF/1qh
        mv84QD//MzMz/zMzM4krKysCMTExAAAAAABZWVkAWVlZGltcXMFWVVX/WWlo/3nGwf+V7uv/mu7t/3ji
        3/9249//eOPg/3nk4v+V7u7/hdvS/27Ov/9vz8H/bs7A/27OwP9uz8D/bs7A/2/OwP9vzsD/bs7A/2/Q
        wv9hq6D/PkxK/zMyMv8zMzPBMjIyGjExMQAAAAAAAAAAAFdXVwBbW1sAWVlZNlZWVtlWVVX/XGpo/4bA
        u/+o7ur/lenk/3/j3f+C5N7/hubh/5Tm4f960sP/c8+9/3PPvf9zz73/cs6+/3LOvv9yz77/c8+9/3PQ
        vv9zz77/YaKX/z9NS/82NTX/MzMz2TAwMDYxMTEAKSkpAAAAAAAAAAAAAAAAAFhYWABTU1MAVFRUQVRU
        VNlVVFT/XGFg/4WjoP+75OL/jt/T/4Pdz/+D28z/fNLA/3fNuv93zrr/d866/3fOuv92zrr/ds66/3fP
        u/930Lz/ccCv/1iFe/86QT//NjU1/zQ0NNkzMzNBMjIyADExMQAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQ
        UABvb28AWFhYNVdXV8JYV1f+WFdX/3F2dv95oJf/dr2r/3rKtf96zbj/e865/3vOuf97zrn/e865/3vN
        uf95ybX/cbim/16Ogv9GV1P/OTk5/zs6Ov45OTnCNjY2NT8/PwAyMjIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFVVVQBfX18AXV1dGlpaWolZWVnqWFhY/1tbW/9ha2j/ZX54/2uSh/9snY//b6SV/22i
        k/9omYv/XoZ7/1FqY/9DTUv/OTk5/zs6Ov8+Pj7qQEBAiTo6Oho+Pj4AODg4AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaWloAXFxcBFhYWDdYWFiXWlpa31xbW/tXVVb/UlFS/0tL
        S/9LTEz/R0hI/0JCQv8/Pj//Pz4+/0BAQPs+Pj7fOzs7lz4+PjdEREQEQkJCAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUlJSAE5OTgRcXFwpWlpabFZW
        Vq1QUFDZSEhI8kdHR/1CQkL9Pz8/8kBAQNlEREStQ0NDbERERClLS0sESEhIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+YABPwAAAAMAAAABAAAAAQAAAAGAAAADwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>